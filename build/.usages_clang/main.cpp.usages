22 serialization::archive 18 0 0 0 0 29 /home/vinnie/src/IP_Port_Scan 35 /home/vinnie/src/IP_Port_Scan/build 0 0 799 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 8 "main.h" 1 10 1 18 18446744073709551615 8 unsigned 3 1 3 9 18446744073709551615 4 Port 3 10 3 14 0 1 ; 3 14 3 15 18446744073709551615 12 // scan port 3 16 3 28 18446744073709551615 14 atomic_int32_t 5 1 5 15 1 15 Search_Compelet 5 16 5 31 2 1 ; 5 31 5 32 18446744073709551615 28 // number of scans completed 5 33 5 61 18446744073709551615 14 atomic_int32_t 6 1 6 15 1 7 Open_IP 6 16 6 23 3 1 ; 6 23 6 24 18446744073709551615 23 // Number of open ports 6 33 6 56 18446744073709551615 5 mutex 7 1 7 6 4 3 mtx 7 7 7 10 5 1 ; 7 10 7 11 18446744073709551615 15 // thread mutex 7 33 7 48 18446744073709551615 4 void 9 1 9 5 18446744073709551615 5 color 9 6 9 11 6 1 ( 9 11 9 12 6 3 int 9 12 9 15 18446744073709551615 1 c 9 16 9 17 7 1 ) 9 17 9 18 6 1 { 9 19 9 20 18446744073709551615 23 SetConsoleTextAttribute 10 3 10 26 18446744073709551615 1 ( 10 26 10 27 18446744073709551615 12 GetStdHandle 10 27 10 39 18446744073709551615 1 ( 10 39 10 40 18446744073709551615 17 STD_OUTPUT_HANDLE 10 40 10 57 18446744073709551615 1 ) 10 57 10 58 18446744073709551615 1 , 10 58 10 59 18446744073709551615 1 c 10 60 10 61 18446744073709551615 1 ) 10 61 10 62 18446744073709551615 1 ; 10 62 10 63 18446744073709551615 6 return 11 3 11 9 18446744073709551615 1 ; 11 9 11 10 18446744073709551615 1 } 12 1 12 2 18446744073709551615 4 void 14 1 14 5 18446744073709551615 7 Get_IPs 14 6 14 13 8 1 ( 14 13 14 14 8 6 vector 14 14 14 20 9 1 < 14 20 14 21 18446744073709551615 6 string 14 21 14 27 10 1 > 14 27 14 28 18446744073709551615 1 & 14 29 14 30 18446744073709551615 3 IPs 14 30 14 33 11 1 , 14 33 14 34 8 6 string 14 35 14 41 10 1 & 14 42 14 43 18446744073709551615 13 Start_IP_Addr 14 43 14 56 12 1 , 14 56 14 57 8 6 string 14 58 14 64 10 1 & 14 65 14 66 18446744073709551615 11 End_IP_Addr 14 66 14 77 13 1 ) 14 77 14 78 8 1 { 14 79 14 80 18446744073709551615 5 color 15 3 15 8 6 1 ( 15 8 15 9 6 2 11 15 9 15 11 18446744073709551615 1 ) 15 11 15 12 6 1 ; 15 12 15 13 18446744073709551615 4 cout 16 3 16 7 14 2 << 16 8 16 10 15 4 endl 16 11 16 15 16 2 << 17 8 17 10 17 29 "Sorting out IP addresses..." 17 11 17 40 18446744073709551615 2 << 17 41 17 43 15 4 endl 17 44 17 48 16 1 ; 17 48 17 49 18446744073709551615 8 unsigned 18 3 18 11 18446744073709551615 4 long 18 12 18 16 18446744073709551615 8 Start_IP 18 17 18 25 18 1 = 18 26 18 27 18446744073709551615 5 htonl 18 28 18 33 19 1 ( 18 33 18 34 18446744073709551615 9 inet_addr 18 34 18 43 20 1 ( 18 43 18 44 18446744073709551615 13 Start_IP_Addr 18 44 18 57 12 1 . 18 57 18 58 21 5 c_str 18 58 18 63 21 1 ( 18 63 18 64 21 1 ) 18 64 18 65 21 1 ) 18 65 18 66 18446744073709551615 1 ) 18 66 18 67 18446744073709551615 1 ; 18 67 18 68 18446744073709551615 8 unsigned 19 3 19 11 18446744073709551615 4 long 19 12 19 16 18446744073709551615 6 End_IP 19 17 19 23 22 1 = 19 24 19 25 18446744073709551615 5 htonl 19 26 19 31 19 1 ( 19 31 19 32 18446744073709551615 9 inet_addr 19 32 19 41 20 1 ( 19 41 19 42 18446744073709551615 11 End_IP_Addr 19 42 19 53 13 1 . 19 53 19 54 21 5 c_str 19 54 19 59 21 1 ( 19 59 19 60 21 1 ) 19 60 19 61 21 1 ) 19 61 19 62 18446744073709551615 1 ) 19 62 19 63 18446744073709551615 1 ; 19 63 19 64 18446744073709551615 2 if 20 3 20 5 18446744073709551615 1 ( 20 6 20 7 18446744073709551615 8 Start_IP 20 7 20 15 18 1 > 20 16 20 17 18446744073709551615 6 End_IP 20 18 20 24 22 1 ) 20 24 20 25 18446744073709551615 1 { 20 26 20 27 18446744073709551615 5 color 21 5 21 10 6 1 ( 21 10 21 11 6 2 12 21 11 21 13 18446744073709551615 1 ) 21 13 21 14 6 1 ; 21 14 21 15 18446744073709551615 4 cout 22 5 22 9 14 2 << 22 10 22 12 17 47 "Error : Start_IP must be smaller than End_IP!" 22 13 22 60 18446744073709551615 1 ; 22 60 22 61 18446744073709551615 1 } 23 3 23 4 18446744073709551615 4 else 23 5 23 9 18446744073709551615 1 { 23 10 23 11 18446744073709551615 7 in_addr 24 5 24 12 23 4 addr 24 13 24 17 23 1 ; 24 17 24 18 18446744073709551615 3 for 25 5 25 8 18446744073709551615 1 ( 25 9 25 10 18446744073709551615 8 unsigned 25 10 25 18 18446744073709551615 4 long 25 19 25 23 18446744073709551615 5 Index 25 24 25 29 24 1 = 25 30 25 31 18446744073709551615 8 Start_IP 25 32 25 40 18 1 ; 25 40 25 41 18446744073709551615 5 Index 25 42 25 47 24 2 <= 25 48 25 50 18446744073709551615 6 End_IP 25 51 25 57 22 1 ; 25 57 25 58 18446744073709551615 5 Index 25 59 25 64 24 2 ++ 25 64 25 66 18446744073709551615 1 ) 25 66 25 67 18446744073709551615 1 { 25 68 25 69 18446744073709551615 4 addr 26 7 26 11 18446744073709551615 1 . 26 11 26 12 18446744073709551615 4 S_un 26 12 26 16 18446744073709551615 1 . 26 16 26 17 18446744073709551615 6 S_addr 26 17 26 23 18446744073709551615 1 = 26 24 26 25 18446744073709551615 5 ntohl 26 26 26 31 18446744073709551615 1 ( 26 31 26 32 18446744073709551615 5 Index 26 32 26 37 18446744073709551615 1 ) 26 37 26 38 18446744073709551615 1 ; 26 38 26 39 18446744073709551615 3 IPs 27 7 27 10 18446744073709551615 1 . 27 10 27 11 18446744073709551615 9 push_back 27 11 27 20 18446744073709551615 1 ( 27 20 27 21 18446744073709551615 9 inet_ntoa 27 21 27 30 18446744073709551615 1 ( 27 30 27 31 18446744073709551615 4 addr 27 31 27 35 18446744073709551615 1 ) 27 35 27 36 18446744073709551615 1 ) 27 36 27 37 18446744073709551615 1 ; 27 37 27 38 18446744073709551615 1 } 28 5 28 6 18446744073709551615 1 } 29 3 29 4 18446744073709551615 1 } 30 1 30 2 18446744073709551615 4 bool 32 1 32 5 18446744073709551615 8 init_WSA 32 6 32 14 25 1 ( 32 14 32 15 25 1 ) 32 15 32 16 25 1 { 32 17 32 18 18446744073709551615 7 WSADATA 33 3 33 10 26 7 wsaData 33 11 33 18 26 1 ; 33 18 33 19 18446744073709551615 4 WORD 34 3 34 7 27 17 wVersionRequested 34 8 34 25 27 1 = 34 26 34 27 18446744073709551615 8 MAKEWORD 34 28 34 36 18446744073709551615 1 ( 34 36 34 37 18446744073709551615 1 1 34 37 34 38 18446744073709551615 1 , 34 38 34 39 18446744073709551615 1 1 34 40 34 41 18446744073709551615 1 ) 34 41 34 42 18446744073709551615 1 ; 34 42 34 43 18446744073709551615 2 if 35 3 35 5 18446744073709551615 1 ( 35 6 35 7 18446744073709551615 10 WSAStartup 35 7 35 17 18446744073709551615 1 ( 35 17 35 18 18446744073709551615 17 wVersionRequested 35 18 35 35 18446744073709551615 1 , 35 35 35 36 18446744073709551615 1 & 35 37 35 38 18446744073709551615 7 wsaData 35 38 35 45 18446744073709551615 1 ) 35 45 35 46 18446744073709551615 1 ) 35 46 35 47 18446744073709551615 1 { 35 48 35 49 18446744073709551615 5 color 36 5 36 10 6 1 ( 36 10 36 11 6 2 12 36 11 36 13 18446744073709551615 1 ) 36 13 36 14 6 1 ; 36 14 36 15 18446744073709551615 4 cout 37 5 37 9 14 2 << 37 10 37 12 17 32 "Winsock Initialization failed." 37 13 37 45 18446744073709551615 2 << 37 46 37 48 15 4 endl 37 49 37 53 16 1 ; 37 53 37 54 18446744073709551615 6 system 38 5 38 11 28 1 ( 38 11 38 12 28 7 "pause" 38 12 38 19 18446744073709551615 1 ) 38 19 38 20 28 1 ; 38 20 38 21 18446744073709551615 6 return 39 5 39 11 18446744073709551615 5 false 39 12 39 17 18446744073709551615 1 ; 39 17 39 18 18446744073709551615 1 } 40 3 40 4 18446744073709551615 4 else 40 5 40 9 18446744073709551615 6 return 41 5 41 11 18446744073709551615 4 true 41 12 41 16 18446744073709551615 1 ; 41 16 41 17 18446744073709551615 1 } 42 1 42 2 18446744073709551615 4 void 44 1 44 5 18446744073709551615 12 Scan_IP_Port 44 6 44 18 29 1 ( 44 18 44 19 29 6 vector 44 19 44 25 9 1 < 44 25 44 26 18446744073709551615 6 string 44 26 44 32 10 1 > 44 32 44 33 18446744073709551615 1 & 44 34 44 35 18446744073709551615 3 IPs 44 35 44 38 30 1 , 44 38 44 39 29 8 ofstream 44 40 44 48 31 1 & 44 49 44 50 18446744073709551615 6 out_IP 44 50 44 56 32 1 , 44 56 44 57 29 5 const 44 58 44 63 18446744073709551615 6 size_t 44 64 44 70 33 1 & 44 71 44 72 18446744073709551615 4 size 44 72 44 76 34 1 ) 44 76 44 77 29 1 { 44 78 44 79 18446744073709551615 6 SOCKET 45 3 45 9 35 8 mysocket 45 10 45 18 35 1 = 45 19 45 20 18446744073709551615 4 NULL 45 21 45 25 18446744073709551615 1 ; 45 25 45 26 18446744073709551615 11 sockaddr_in 46 3 46 14 36 7 my_addr 46 15 46 22 36 1 ; 46 22 46 23 18446744073709551615 5 while 47 3 47 8 18446744073709551615 1 ( 47 9 47 10 18446744073709551615 15 Search_Compelet 47 10 47 25 2 2 != 47 26 47 28 18446744073709551615 4 size 47 29 47 33 34 1 ) 47 33 47 34 18446744073709551615 1 { 47 35 47 36 18446744073709551615 6 string 48 5 48 11 10 1 & 48 12 48 13 18446744073709551615 2 IP 48 13 48 15 37 1 = 48 16 48 17 18446744073709551615 3 IPs 48 18 48 21 30 1 [ 48 21 48 22 38 15 Search_Compelet 48 22 48 37 2 1 ] 48 37 48 38 38 1 ; 48 38 48 39 18446744073709551615 15 Search_Compelet 49 5 49 20 2 2 ++ 49 20 49 22 39 1 ; 49 22 49 23 18446744073709551615 6 size_t 50 5 50 11 33 7 TimeOut 50 12 50 19 40 1 = 50 20 50 21 18446744073709551615 4 1000 50 22 50 26 18446744073709551615 1 ; 50 26 50 27 18446744073709551615 20 // Set timeout to 1s 50 28 50 48 18446744073709551615 2 if 51 5 51 7 18446744073709551615 1 ( 51 8 51 9 18446744073709551615 1 ( 51 9 51 10 18446744073709551615 8 mysocket 51 10 51 18 18446744073709551615 1 = 51 19 51 20 18446744073709551615 6 socket 51 21 51 27 18446744073709551615 1 ( 51 27 51 28 18446744073709551615 7 AF_INET 51 28 51 35 18446744073709551615 1 , 51 35 51 36 18446744073709551615 11 SOCK_STREAM 51 37 51 48 18446744073709551615 1 , 51 48 51 49 18446744073709551615 1 0 51 50 51 51 18446744073709551615 1 ) 51 51 51 52 18446744073709551615 1 ) 51 52 51 53 18446744073709551615 2 == 51 54 51 56 18446744073709551615 14 INVALID_SOCKET 51 57 51 71 18446744073709551615 2 && 51 72 51 74 18446744073709551615 10 setsockopt 52 9 52 19 18446744073709551615 1 ( 52 19 52 20 18446744073709551615 8 mysocket 52 20 52 28 18446744073709551615 1 , 52 28 52 29 18446744073709551615 10 SOL_SOCKET 52 30 52 40 18446744073709551615 1 , 52 40 52 41 18446744073709551615 11 SO_SNDTIMEO 52 42 52 53 18446744073709551615 1 , 52 53 52 54 18446744073709551615 1 ( 52 55 52 56 18446744073709551615 4 char 52 56 52 60 18446744073709551615 1 * 52 61 52 62 18446744073709551615 1 ) 52 62 52 63 18446744073709551615 1 & 52 63 52 64 18446744073709551615 7 TimeOut 52 64 52 71 18446744073709551615 1 , 52 71 52 72 18446744073709551615 6 sizeof 52 73 52 79 18446744073709551615 1 ( 52 79 52 80 18446744073709551615 6 size_t 52 80 52 86 18446744073709551615 1 ) 52 86 52 87 18446744073709551615 2 == 52 88 52 90 18446744073709551615 12 SOCKET_ERROR 52 91 52 103 18446744073709551615 1 ) 52 103 52 104 18446744073709551615 1 ) 52 104 52 105 18446744073709551615 1 { 52 106 52 107 18446744073709551615 5 color 53 7 53 12 6 1 ( 53 12 53 13 6 2 12 53 13 53 15 18446744073709551615 1 ) 53 15 53 16 6 1 ; 53 16 53 17 18446744073709551615 4 cout 54 7 54 11 14 2 << 54 12 54 14 17 20 "socket is invalid." 54 15 54 35 18446744073709551615 2 << 54 36 54 38 15 4 endl 54 39 54 43 16 1 ; 54 43 54 44 18446744073709551615 1 } 55 5 55 6 18446744073709551615 7 my_addr 56 5 56 12 18446744073709551615 1 . 56 12 56 13 18446744073709551615 10 sin_family 56 13 56 23 18446744073709551615 1 = 56 24 56 25 18446744073709551615 7 AF_INET 56 26 56 33 18446744073709551615 1 ; 56 33 56 34 18446744073709551615 7 my_addr 57 5 57 12 18446744073709551615 1 . 57 12 57 13 18446744073709551615 8 sin_port 57 13 57 21 18446744073709551615 1 = 57 22 57 23 18446744073709551615 5 htons 57 24 57 29 18446744073709551615 1 ( 57 29 57 30 18446744073709551615 4 Port 57 30 57 34 18446744073709551615 1 ) 57 34 57 35 18446744073709551615 1 ; 57 35 57 36 18446744073709551615 7 my_addr 58 5 58 12 18446744073709551615 1 . 58 12 58 13 18446744073709551615 8 sin_addr 58 13 58 21 18446744073709551615 1 . 58 21 58 22 18446744073709551615 6 s_addr 58 22 58 28 18446744073709551615 1 = 58 29 58 30 18446744073709551615 9 inet_addr 58 31 58 40 18446744073709551615 1 ( 58 40 58 41 18446744073709551615 2 IP 58 41 58 43 18446744073709551615 1 . 58 43 58 44 18446744073709551615 5 c_str 58 44 58 49 18446744073709551615 1 ( 58 49 58 50 18446744073709551615 1 ) 58 50 58 51 18446744073709551615 1 ) 58 51 58 52 18446744073709551615 1 ; 58 52 58 53 18446744073709551615 2 if 59 5 59 7 18446744073709551615 1 ( 59 8 59 9 18446744073709551615 7 connect 59 9 59 16 18446744073709551615 1 ( 59 16 59 17 18446744073709551615 8 mysocket 59 17 59 25 18446744073709551615 1 , 59 25 59 26 18446744073709551615 1 ( 59 27 59 28 18446744073709551615 8 sockaddr 59 28 59 36 18446744073709551615 1 * 59 37 59 38 18446744073709551615 1 ) 59 38 59 39 18446744073709551615 1 & 59 39 59 40 18446744073709551615 7 my_addr 59 40 59 47 18446744073709551615 1 , 59 47 59 48 18446744073709551615 6 sizeof 59 49 59 55 18446744073709551615 1 ( 59 55 59 56 18446744073709551615 8 sockaddr 59 56 59 64 18446744073709551615 1 ) 59 64 59 65 18446744073709551615 1 ) 59 65 59 66 18446744073709551615 2 != 59 67 59 69 18446744073709551615 12 SOCKET_ERROR 59 70 59 82 18446744073709551615 1 ) 59 82 59 83 18446744073709551615 1 { 59 84 59 85 18446744073709551615 7 Open_IP 60 7 60 14 3 2 ++ 60 14 60 16 39 1 ; 60 16 60 17 18446744073709551615 10 lock_guard 61 7 61 17 41 1 < 61 17 61 18 18446744073709551615 5 mutex 61 18 61 23 4 1 > 61 23 61 24 18446744073709551615 4 temp 61 25 61 29 42 1 ( 61 29 61 30 18446744073709551615 3 mtx 61 30 61 33 18446744073709551615 1 ) 61 33 61 34 18446744073709551615 1 ; 61 34 61 35 18446744073709551615 5 color 62 7 62 12 6 1 ( 62 12 62 13 6 2 11 62 13 62 15 18446744073709551615 1 ) 62 15 62 16 6 1 ; 62 16 62 17 18446744073709551615 4 cout 63 7 63 11 14 2 << 63 12 63 14 18446744073709551615 2 IP 63 15 63 17 37 2 << 63 18 63 20 18446744073709551615 8 " Port " 63 21 63 29 18446744073709551615 2 << 63 30 63 32 18446744073709551615 4 Port 63 33 63 37 0 2 << 63 38 63 40 18446744073709551615 12 " is open\n" 63 41 63 53 18446744073709551615 1 ; 63 53 63 54 18446744073709551615 6 out_IP 64 7 64 13 32 2 << 64 14 64 16 18446744073709551615 2 IP 64 17 64 19 37 2 << 64 20 64 22 18446744073709551615 4 endl 64 23 64 27 43 1 ; 64 27 64 28 18446744073709551615 1 } 65 5 65 6 18446744073709551615 4 else 65 7 65 11 18446744073709551615 1 { 65 12 65 13 18446744073709551615 10 lock_guard 66 7 66 17 41 1 < 66 17 66 18 18446744073709551615 5 mutex 66 18 66 23 4 1 > 66 23 66 24 18446744073709551615 4 temp 66 25 66 29 44 1 ( 66 29 66 30 18446744073709551615 3 mtx 66 30 66 33 18446744073709551615 1 ) 66 33 66 34 18446744073709551615 1 ; 66 34 66 35 18446744073709551615 5 color 67 7 67 12 6 1 ( 67 12 67 13 6 2 14 67 13 67 15 18446744073709551615 1 ) 67 15 67 16 6 1 ; 67 16 67 17 18446744073709551615 4 cout 68 7 68 11 14 2 << 68 12 68 14 18446744073709551615 2 IP 68 15 68 17 37 2 << 68 18 68 20 18446744073709551615 20 " connect failed!\n" 68 21 68 41 18446744073709551615 1 ; 68 41 68 42 18446744073709551615 1 } 69 5 69 6 18446744073709551615 1 } 70 3 70 4 18446744073709551615 11 closesocket 71 3 71 14 18446744073709551615 1 ( 71 14 71 15 18446744073709551615 8 mysocket 71 15 71 23 18446744073709551615 1 ) 71 23 71 24 18446744073709551615 1 ; 71 24 71 25 18446744073709551615 6 return 72 3 72 9 18446744073709551615 1 ; 72 9 72 10 18446744073709551615 1 } 73 1 73 2 18446744073709551615 3 int 75 1 75 4 18446744073709551615 4 main 75 5 75 9 45 1 ( 75 9 75 10 45 1 ) 75 10 75 11 45 1 { 75 12 75 13 18446744073709551615 8 unsigned 76 3 76 11 18446744073709551615 13 thread_number 76 12 76 25 46 1 ; 76 25 76 26 18446744073709551615 5 color 77 3 77 8 6 1 ( 77 8 77 9 6 2 14 77 9 77 11 18446744073709551615 1 ) 77 11 77 12 6 1 ; 77 12 77 13 18446744073709551615 4 cout 78 3 78 7 14 2 << 78 8 78 10 15 43 "Welcome to IP Segment Scanner (BY: Ho229)" 78 11 78 54 18446744073709551615 2 << 78 55 78 57 18446744073709551615 4 endl 78 58 78 62 43 1 ; 78 62 78 63 18446744073709551615 2 if 79 3 79 5 18446744073709551615 1 ( 79 6 79 7 18446744073709551615 8 init_WSA 79 7 79 15 25 1 ( 79 15 79 16 25 1 ) 79 16 79 17 25 1 ) 79 17 79 18 18446744073709551615 1 { 79 19 79 20 18446744073709551615 8 ifstream 80 5 80 13 47 5 in_IP 80 14 80 19 48 1 ( 80 19 80 20 49 8 "IP.txt" 80 20 80 28 18446744073709551615 1 , 80 28 80 29 49 3 ios 80 30 80 33 50 2 :: 80 33 80 35 18446744073709551615 2 in 80 35 80 37 51 1 ) 80 37 80 38 49 1 ; 80 38 80 39 18446744073709551615 2 if 81 5 81 7 18446744073709551615 1 ( 81 8 81 9 18446744073709551615 5 in_IP 81 9 81 14 48 1 . 81 14 81 15 52 7 is_open 81 15 81 22 52 1 ( 81 22 81 23 52 1 ) 81 23 81 24 52 1 ) 81 24 81 25 18446744073709551615 1 { 81 26 81 27 18446744073709551615 6 vector 82 7 82 13 53 1 < 82 13 82 14 18446744073709551615 6 string 82 14 82 20 53 1 > 82 20 82 21 18446744073709551615 3 IPs 82 22 82 25 53 1 ; 82 25 82 26 18446744073709551615 8 ofstream 83 7 83 15 31 6 out_IP 83 16 83 22 54 1 ( 83 22 83 23 55 12 "Result.txt" 83 23 83 35 18446744073709551615 1 , 83 35 83 36 55 3 ios 83 37 83 40 50 2 :: 83 40 83 42 18446744073709551615 5 trunc 83 42 83 47 56 1 ) 83 47 83 48 55 1 ; 83 48 83 49 18446744073709551615 6 string 84 7 84 13 10 13 Start_IP_Addr 84 14 84 27 57 1 , 84 27 84 28 18446744073709551615 11 End_IP_Addr 84 29 84 40 58 1 ; 84 40 84 41 18446744073709551615 4 cout 85 7 85 11 14 2 << 85 12 85 14 15 52 "Please enter the number of scan threads (WARNING):" 85 15 85 67 18446744073709551615 1 ; 85 67 85 68 18446744073709551615 3 cin 86 7 86 10 59 2 >> 86 11 86 13 60 13 thread_number 86 14 86 27 46 1 ; 86 27 86 28 18446744073709551615 13 thread_number 87 7 87 20 46 1 > 87 21 87 22 18446744073709551615 4 1400 87 23 87 27 18446744073709551615 1 ? 87 28 87 29 18446744073709551615 13 thread_number 87 30 87 43 46 1 = 87 44 87 45 18446744073709551615 4 1400 87 46 87 50 18446744073709551615 1 : 87 51 87 52 18446744073709551615 4 NULL 87 53 87 57 18446744073709551615 1 ; 87 57 87 58 18446744073709551615 44 // Set the maximum number of threads to 1400 87 59 87 103 18446744073709551615 4 cout 88 7 88 11 14 2 << 88 12 88 14 15 32 "Please enter the port to scan:" 88 15 88 47 18446744073709551615 1 ; 88 47 88 48 18446744073709551615 3 cin 89 7 89 10 59 2 >> 89 11 89 13 60 4 Port 89 14 89 18 0 1 ; 89 18 89 19 18446744073709551615 5 while 90 7 90 12 18446744073709551615 1 ( 90 13 90 14 18446744073709551615 1 ! 90 14 90 15 18446744073709551615 5 in_IP 90 15 90 20 48 1 . 90 20 90 21 61 3 eof 90 21 90 24 61 1 ( 90 24 90 25 61 1 ) 90 25 90 26 61 1 ) 90 26 90 27 18446744073709551615 1 { 90 28 90 29 18446744073709551615 5 in_IP 91 9 91 14 48 2 >> 91 15 91 17 18446744073709551615 13 Start_IP_Addr 91 18 91 31 57 2 >> 91 32 91 34 18446744073709551615 11 End_IP_Addr 91 35 91 46 58 1 ; 91 46 91 47 18446744073709551615 7 Get_IPs 92 9 92 16 18446744073709551615 1 ( 92 16 92 17 18446744073709551615 3 IPs 92 17 92 20 18446744073709551615 1 , 92 20 92 21 18446744073709551615 13 Start_IP_Addr 92 22 92 35 18446744073709551615 1 , 92 35 92 36 18446744073709551615 11 End_IP_Addr 92 37 92 48 18446744073709551615 1 ) 92 48 92 49 18446744073709551615 1 ; 92 49 92 50 18446744073709551615 5 color 93 9 93 14 6 1 ( 93 14 93 15 6 2 13 93 15 93 17 18446744073709551615 1 ) 93 17 93 18 6 1 ; 93 18 93 19 18446744073709551615 4 cout 94 9 94 13 18446744073709551615 2 << 94 14 94 16 18446744073709551615 31 "Normal Seach: About To Seach " 94 17 94 48 18446744073709551615 2 << 94 49 94 51 18446744073709551615 3 IPs 94 52 94 55 18446744073709551615 1 . 94 55 94 56 18446744073709551615 4 size 94 56 94 60 18446744073709551615 1 ( 94 60 94 61 18446744073709551615 1 ) 94 61 94 62 18446744073709551615 2 << 94 63 94 65 18446744073709551615 12 " IP Using " 94 66 94 78 18446744073709551615 2 << 94 79 94 81 18446744073709551615 13 thread_number 94 82 94 95 18446744073709551615 2 << 94 96 94 98 18446744073709551615 10 " Threads" 94 99 94 109 18446744073709551615 2 << 94 110 94 112 18446744073709551615 4 endl 94 113 94 117 18446744073709551615 1 ; 94 117 94 118 18446744073709551615 5 color 95 9 95 14 6 1 ( 95 14 95 15 6 2 11 95 15 95 17 18446744073709551615 1 ) 95 17 95 18 6 1 ; 95 18 95 19 18446744073709551615 7 Open_IP 96 9 96 16 3 1 = 96 17 96 18 62 1 0 96 19 96 20 18446744073709551615 1 ; 96 20 96 21 18446744073709551615 15 Search_Compelet 97 9 97 24 2 1 = 97 25 97 26 62 1 0 97 27 97 28 18446744073709551615 1 ; 97 28 97 29 18446744073709551615 6 thread 98 9 98 15 63 1 * 98 16 98 17 18446744073709551615 11 Scan_Thread 98 17 98 28 64 1 = 98 29 98 30 18446744073709551615 3 new 98 31 98 34 18446744073709551615 6 thread 98 35 98 41 63 1 [ 98 41 98 42 18446744073709551615 13 thread_number 98 42 98 55 46 1 ] 98 55 98 56 18446744073709551615 1 ; 98 56 98 57 18446744073709551615 3 try 100 9 100 12 18446744073709551615 1 { 100 13 100 14 18446744073709551615 24 /*Create a scan thread*/ 101 11 101 35 18446744073709551615 3 for 102 11 102 14 18446744073709551615 1 ( 102 15 102 16 18446744073709551615 6 size_t 102 16 102 22 33 1 i 102 23 102 24 65 1 = 102 25 102 26 18446744073709551615 1 0 102 27 102 28 18446744073709551615 1 ; 102 28 102 29 18446744073709551615 1 i 102 30 102 31 65 1 < 102 32 102 33 18446744073709551615 13 thread_number 102 34 102 47 46 1 ; 102 47 102 48 18446744073709551615 1 i 102 49 102 50 65 2 ++ 102 50 102 52 18446744073709551615 1 ) 102 52 102 53 18446744073709551615 1 { 102 54 102 55 18446744073709551615 11 Scan_Thread 103 13 103 24 18446744073709551615 1 [ 103 24 103 25 18446744073709551615 1 i 103 25 103 26 18446744073709551615 1 ] 103 26 103 27 18446744073709551615 1 = 103 28 103 29 18446744073709551615 6 thread 103 30 103 36 18446744073709551615 1 ( 103 36 103 37 18446744073709551615 1 [ 103 37 103 38 18446744073709551615 1 & 103 38 103 39 18446744073709551615 1 ] 103 39 103 40 18446744073709551615 1 ( 103 40 103 41 18446744073709551615 1 ) 103 41 103 42 18446744073709551615 1 { 103 43 103 44 18446744073709551615 12 Scan_IP_Port 104 15 104 27 18446744073709551615 1 ( 104 27 104 28 18446744073709551615 3 IPs 104 28 104 31 18446744073709551615 1 , 104 31 104 32 18446744073709551615 6 out_IP 104 33 104 39 18446744073709551615 1 , 104 39 104 40 18446744073709551615 3 IPs 104 41 104 44 18446744073709551615 1 . 104 44 104 45 18446744073709551615 4 size 104 45 104 49 18446744073709551615 1 ( 104 49 104 50 18446744073709551615 1 ) 104 50 104 51 18446744073709551615 1 ) 104 51 104 52 18446744073709551615 1 ; 104 52 104 53 18446744073709551615 1 } 105 13 105 14 18446744073709551615 1 ) 105 14 105 15 18446744073709551615 1 ; 105 15 105 16 18446744073709551615 1 } 106 11 106 12 18446744073709551615 27 /*waiting for scan thread*/ 107 11 107 38 18446744073709551615 3 for 108 11 108 14 18446744073709551615 1 ( 108 15 108 16 18446744073709551615 6 size_t 108 16 108 22 33 1 i 108 23 108 24 66 1 = 108 25 108 26 18446744073709551615 1 0 108 27 108 28 18446744073709551615 1 ; 108 28 108 29 18446744073709551615 1 i 108 30 108 31 66 1 < 108 32 108 33 18446744073709551615 13 thread_number 108 34 108 47 46 1 ; 108 47 108 48 18446744073709551615 1 i 108 49 108 50 66 2 ++ 108 50 108 52 18446744073709551615 1 ) 108 52 108 53 18446744073709551615 1 { 108 54 108 55 18446744073709551615 2 if 109 13 109 15 18446744073709551615 1 ( 109 16 109 17 18446744073709551615 11 Scan_Thread 109 17 109 28 64 1 [ 109 28 109 29 18446744073709551615 1 i 109 29 109 30 66 1 ] 109 30 109 31 18446744073709551615 1 . 109 31 109 32 67 8 joinable 109 32 109 40 67 1 ( 109 40 109 41 67 1 ) 109 41 109 42 67 1 ) 109 42 109 43 18446744073709551615 11 Scan_Thread 110 15 110 26 64 1 [ 110 26 110 27 18446744073709551615 1 i 110 27 110 28 66 1 ] 110 28 110 29 18446744073709551615 1 . 110 29 110 30 68 4 join 110 30 110 34 68 1 ( 110 34 110 35 68 1 ) 110 35 110 36 68 1 ; 110 36 110 37 18446744073709551615 1 } 111 11 111 12 18446744073709551615 1 } 112 9 112 10 18446744073709551615 5 catch 112 11 112 16 18446744073709551615 1 ( 112 17 112 18 18446744073709551615 5 const 112 18 112 23 18446744073709551615 9 exception 112 24 112 33 69 1 & 112 34 112 35 18446744073709551615 3 err 112 35 112 38 70 1 ) 112 38 112 39 18446744073709551615 1 { 112 40 112 41 18446744073709551615 5 color 113 11 113 16 6 1 ( 113 16 113 17 6 2 12 113 17 113 19 18446744073709551615 1 ) 113 19 113 20 6 1 ; 113 20 113 21 18446744073709551615 4 cout 114 11 114 15 14 2 << 114 16 114 18 15 15 "System Error:" 114 19 114 34 18446744073709551615 2 << 114 35 114 37 15 3 err 114 38 114 41 70 1 . 114 41 114 42 71 4 what 114 42 114 46 71 1 ( 114 46 114 47 71 1 ) 114 47 114 48 71 2 << 114 49 114 51 18446744073709551615 4 endl 114 52 114 56 43 1 ; 114 56 114 57 18446744073709551615 1 } 115 9 115 10 18446744073709551615 3 IPs 117 9 117 12 18446744073709551615 1 . 117 12 117 13 18446744073709551615 5 clear 117 13 117 18 18446744073709551615 1 ( 117 18 117 19 18446744073709551615 1 ) 117 19 117 20 18446744073709551615 1 ; 117 20 117 21 18446744073709551615 6 delete 118 9 118 15 18446744073709551615 1 [ 118 15 118 16 18446744073709551615 1 ] 118 16 118 17 18446744073709551615 11 Scan_Thread 118 18 118 29 64 1 ; 118 29 118 30 18446744073709551615 5 color 119 9 119 14 6 1 ( 119 14 119 15 6 2 13 119 15 119 17 18446744073709551615 1 ) 119 17 119 18 6 1 ; 119 18 119 19 18446744073709551615 4 cout 120 9 120 13 14 2 << 120 14 120 16 18446744073709551615 13 Start_IP_Addr 120 17 120 30 57 2 << 120 31 120 33 18446744073709551615 8 " -->> " 120 34 120 42 18446744073709551615 2 << 120 43 120 45 18446744073709551615 11 End_IP_Addr 120 46 120 57 58 2 << 120 58 120 60 18446744073709551615 25 " Search Complete.Found " 120 61 120 86 18446744073709551615 2 << 120 87 120 89 18446744073709551615 7 Open_IP 120 90 120 97 3 2 << 120 98 120 100 18446744073709551615 9 "Result." 120 101 120 110 18446744073709551615 2 << 120 111 120 113 18446744073709551615 4 endl 120 114 120 118 43 1 ; 120 118 120 119 18446744073709551615 1 } 121 7 121 8 18446744073709551615 5 in_IP 122 7 122 12 48 1 . 122 12 122 13 72 5 close 122 13 122 18 72 1 ( 122 18 122 19 72 1 ) 122 19 122 20 72 1 ; 122 20 122 21 18446744073709551615 6 out_IP 123 7 123 13 54 1 . 123 13 123 14 73 5 close 123 14 123 19 73 1 ( 123 19 123 20 73 1 ) 123 20 123 21 73 1 ; 123 21 123 22 18446744073709551615 4 cout 124 7 124 11 14 2 << 124 12 124 14 15 54 "==================  Scan complete! =================" 124 15 124 69 18446744073709551615 2 << 124 70 124 72 18446744073709551615 4 endl 124 73 124 77 43 1 ; 124 77 124 78 18446744073709551615 1 } 125 5 125 6 18446744073709551615 4 else 125 7 125 11 18446744073709551615 1 { 125 12 125 13 18446744073709551615 5 color 126 7 126 12 6 1 ( 126 12 126 13 6 2 12 126 13 126 15 18446744073709551615 1 ) 126 15 126 16 6 1 ; 126 16 126 17 18446744073709551615 4 cout 127 7 127 11 14 2 << 127 12 127 14 15 31 "Could not open file! (IP.txt)" 127 15 127 46 18446744073709551615 2 << 127 47 127 49 18446744073709551615 4 endl 127 50 127 54 43 1 ; 127 54 127 55 18446744073709551615 1 } 128 5 128 6 18446744073709551615 10 WSACleanup 129 5 129 15 74 1 ( 129 15 129 16 18446744073709551615 1 ) 129 16 129 17 18446744073709551615 1 ; 129 17 129 18 18446744073709551615 6 system 130 5 130 11 28 1 ( 130 11 130 12 28 7 "pause" 130 12 130 19 18446744073709551615 1 ) 130 19 130 20 28 1 ; 130 20 130 21 18446744073709551615 1 } 131 3 131 4 18446744073709551615 6 return 132 3 132 9 18446744073709551615 12 EXIT_SUCCESS 132 10 132 22 18446744073709551615 1 ; 132 22 132 23 18446744073709551615 1 } 133 1 133 2 18446744073709551615 0 0 75 0 0 0 9 0 0 1 13 0 4 Port 20 1 13 0 18 atomic_int32_t:std 9 1 13 0 15 Search_Compelet 9 1 13 0 7 Open_IP 4 1 13 0 9 mutex:std 9 1 13 0 3 mtx 8 1 13 0 5 color 10 1 13 0 43 9:16:/home/vinnie/src/IP_Port_Scan/main.cpp 8 1 13 0 7 Get_IPs 31 1 13 0 10 vector:std 20 1 13 0 10 string:std 10 1 13 0 44 14:30:/home/vinnie/src/IP_Port_Scan/main.cpp 10 1 13 0 44 14:43:/home/vinnie/src/IP_Port_Scan/main.cpp 10 1 13 0 44 14:66:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 8 cout:std 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 8 1 13 0 12 operator:std 9 1 13 0 44 18:17:/home/vinnie/src/IP_Port_Scan/main.cpp 49 1 13 0 5 htonl 49 1 13 0 9 inet_addr 21 1 13 0 30 c_str:basic_string:__cxx11:std 9 1 13 0 44 19:17:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 44 24:13:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 44 25:24:/home/vinnie/src/IP_Port_Scan/main.cpp 8 1 13 0 8 init_WSA 9 1 13 0 44 33:11:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 43 34:8:/home/vinnie/src/IP_Port_Scan/main.cpp 8 1 13 0 6 system 8 1 13 0 12 Scan_IP_Port 10 1 13 0 44 44:35:/home/vinnie/src/IP_Port_Scan/main.cpp 20 1 13 0 12 ofstream:std 10 1 13 0 44 44:50:/home/vinnie/src/IP_Port_Scan/main.cpp 20 1 13 0 6 size_t 10 1 13 0 44 44:72:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 44 45:10:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 44 46:15:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 44 48:13:/home/vinnie/src/IP_Port_Scan/main.cpp 21 1 13 0 21 operator[]:vector:std 21 1 13 0 28 operator++:__atomic_base:std 9 1 13 0 44 50:12:/home/vinnie/src/IP_Port_Scan/main.cpp 31 1 13 0 14 lock_guard:std 9 1 13 0 44 61:25:/home/vinnie/src/IP_Port_Scan/main.cpp 49 1 13 0 4 endl 9 1 13 0 44 66:25:/home/vinnie/src/IP_Port_Scan/main.cpp 8 1 13 0 4 main 9 1 13 0 44 76:12:/home/vinnie/src/IP_Port_Scan/main.cpp 20 1 13 0 12 ifstream:std 9 1 13 0 44 80:14:/home/vinnie/src/IP_Port_Scan/main.cpp 24 1 13 0 18 basic_ifstream:std 20 1 13 0 7 ios:std 9 1 13 0 15 in:ios_base:std 21 1 13 0 26 is_open:basic_ifstream:std 9 1 13 0 44 82:22:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 44 83:16:/home/vinnie/src/IP_Port_Scan/main.cpp 24 1 13 0 18 basic_ofstream:std 9 1 13 0 18 trunc:ios_base:std 9 1 13 0 44 84:14:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 44 84:29:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 7 cin:std 21 1 13 0 28 operator>>:basic_istream:std 21 1 13 0 17 eof:basic_ios:std 21 1 13 0 27 operator=:__atomic_base:std 4 1 13 0 10 thread:std 9 1 13 0 44 98:17:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 45 102:23:/home/vinnie/src/IP_Port_Scan/main.cpp 9 1 13 0 45 108:23:/home/vinnie/src/IP_Port_Scan/main.cpp 21 1 13 0 19 joinable:thread:std 21 1 13 0 15 join:thread:std 4 1 13 0 13 exception:std 9 1 13 0 45 112:35:/home/vinnie/src/IP_Port_Scan/main.cpp 21 1 13 0 18 what:exception:std 21 1 13 0 24 close:basic_ifstream:std 21 1 13 0 24 close:basic_ofstream:std 49 1 13 0 10 WSACleanup 0 0 2 0 0 0 38 /home/vinnie/src/IP_Port_Scan/main.cpp 1666127117 36 /home/vinnie/src/IP_Port_Scan/main.h 1666137808